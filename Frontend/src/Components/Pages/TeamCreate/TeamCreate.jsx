import { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import { createTeam } from "../../../../redux/slices/teamSlice.js";
import "./style.css";

export default function TeamCreate() {
    const dispatch = useDispatch();
    const navigate = useNavigate();
    const { user } = useSelector((state) => state.user);
    const { teamId, loading, error } = useSelector((state) => state.team);
    const [teamName, setTeamName] = useState("");
    const [formError, setFormError] = useState("");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∫–æ–º–∞–Ω–¥–∞
    useEffect(() => {
        if (user && user.team_id) {
            // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–∞–Ω–¥—ã
            navigate(`/team/${user.team_id}`);
        }
    }, [user, navigate]);

    const handleCreateTeam = (evt) => {
        evt.preventDefault();
        setFormError("");

        if (!user || !user.user_id) {
            setFormError("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.");
            return;
        }

        if (!teamName.trim()) {
            setFormError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.");
            return;
        }

        dispatch(createTeam({ teamName: teamName.trim(), userId: user.user_id }))
            .unwrap()
            .then((response) => {
                navigate(`/team/${response.teamId}`);
            })
            .catch((error) => {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã:", error);
                setFormError(error.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã");
            });
    };

    // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (user && user.team_id) {
        return (
            <div className="container">
                <div className="team-create-container">
                    <div className="already-has-team">
                        <div className="team-icon">üë•</div>
                        <h2>–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞</h2>
                        <p>–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.</p>
                        <button 
                            className="btn go-to-team-btn" 
                            onClick={() => navigate(`/team/${user.team_id}`)}
                        >
                            –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–∞–Ω–¥–µ
                        </button>
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className="container">
            <div className="team-create-container">
                <div className="team-create-header">
                    <h1 className="page__title">–°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É</h1>
                    <p className="team-create-subtitle">
                        –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
                    </p>
                </div>

                <div className="team-create-form-container">
                    <form onSubmit={handleCreateTeam} className="team-create-form">
                        <div className="form-group">
                            <label htmlFor="teamName" className="form-label">
                                –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
                            </label>
                            <input
                                className="form-control"
                                type="text"
                                id="teamName"
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã"
                                value={teamName}
                                onChange={(e) => setTeamName(e.target.value)}
                                required
                                maxLength="50"
                            />
                            <p className="form-hint">
                                –ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤
                            </p>
                        </div>

                        {formError && (
                            <div className="error-message">
                                <p className="error">{formError}</p>
                            </div>
                        )}

                        <div className="form-actions">
                            <button 
                                type="submit" 
                                className="btn create-team-btn"
                                disabled={loading}
                            >
                                {loading ? "–°–æ–∑–¥–∞–Ω–∏–µ..." : "–°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É"}
                            </button>
                        </div>
                    </form>
                </div>

                <div className="team-create-info">
                    <h3>–ß—Ç–æ –¥–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã?</h3>
                    <ul className="benefits-list">
                        <li>üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ –¥–ª—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã</li>
                        <li>üí¨ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –¥–ª—è –æ–±—â–µ–Ω–∏—è</li>
                        <li>üë• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</li>
                        <li>üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤</li>
                        <li>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö</li>
                    </ul>
                </div>
            </div>
        </div>
    );
}